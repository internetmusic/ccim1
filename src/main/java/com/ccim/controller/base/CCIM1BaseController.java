/* 
* Generated by
* 
*      _____ _          __  __      _     _
*     / ____| |        / _|/ _|    | |   | |
*    | (___ | | ____ _| |_| |_ ___ | | __| | ___ _ __
*     \___ \| |/ / _` |  _|  _/ _ \| |/ _` |/ _ \ '__|
*     ____) |   < (_| | | | || (_) | | (_| |  __/ |
*    |_____/|_|\_\__,_|_| |_| \___/|_|\__,_|\___|_|
*
* The code generator that works in many programming languages
*
*			https://www.skaffolder.com
*
*
* You can generate the code from the command-line
*       https://npmjs.com/package/skaffolder-cli
*
*       npm install -g skaffodler-cli
*
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
*
* To remove this comment please upgrade your plan here: 
*      https://app.skaffolder.com/#!/upgrade
*
* Or get up to 70% discount sharing your unique link:
*       https://app.skaffolder.com/#!/register?friend=5e1982d8a4f4b55911b4d29f
*
* You will get 10% discount for each one of your friends
* 
*/
package com.ccim.controller.base;

import java.util.List;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.http.ResponseEntity;
import org.modelmapper.ModelMapper;
import java.util.stream.Collectors;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import org.springframework.security.access.annotation.Secured;
import org.springframework.beans.factory.annotation.Autowired;
import com.ccim.db.ccim_db.service.CCIM1Service;
import com.ccim.db.ccim_db.entity.CCIM1;
import com.ccim.db.ccim_db.dtos.CCIM1Dto;

import com.ccim.db.ccim_db.entity.User;

//IMPORT RELATIONS

import com.ccim.db.ccim_db.service.UserService;


public class CCIM1BaseController {
    
    @Autowired
	CCIM1Service ccim1Service;

	
	@Autowired
	UserService userService;
	

	@Autowired
	private ModelMapper modelMapper;



//CRUD METHODS

	
    //CRUD - REMOVE
    @Secured({ "ROLE_PRIVATE_USER" })
	@DeleteMapping("/ccim1/{id}")
	public ResponseEntity<Void> delete(@PathVariable("id") Long id) {
		CCIM1 ccim1Selected = ccim1Service.getOne(id);
		
		
		ccim1Service.delete(id);
		return ResponseEntity.ok().build();
	}
	
    //CRUD - FIND BY Wallet
    
	@GetMapping("/ccim1/findBywallet/{key}")
	public ResponseEntity<List<CCIM1Dto>> findByWallet(@PathVariable("key") Long id) {
		
		User user = userService.getOne(id);
		List<CCIM1> ccim1s = ccim1Service.findByWallet(user);
		List<CCIM1Dto> ccim1sDto = ccim1s.stream()
				.map(ccim1 -> convertToDto(ccim1))
				.collect(Collectors.toList());
		
		

		return ResponseEntity.ok().body(ccim1sDto);
	}
	
    //CRUD - GET ONE
    @Secured({ "ROLE_PRIVATE_USER" })
	@GetMapping("/ccim1/{id}")
	public ResponseEntity<CCIM1Dto> get(@PathVariable("id") Long id) {
		CCIM1 ccim1Selected = ccim1Service.getOne(id);
		return ResponseEntity.ok().body(convertToDto(ccim1Selected));
	}
	
	
    //CRUD - GET LIST
    @Secured({ "ROLE_PRIVATE_USER" })
	@GetMapping("/ccim1")
	public ResponseEntity<List<CCIM1Dto>> getList() {
		List<CCIM1> list = ccim1Service.getAll();
		List<CCIM1Dto> listDto = list.stream()
				.map(ccim1 -> convertToDto(ccim1))
				.collect(Collectors.toList());
		return ResponseEntity.ok().body(listDto);
	}



/*
 * CUSTOM SERVICES
 * 
 *	These services will be overwritten and implemented in  Custom.js
 */


	private CCIM1Dto convertToDto(CCIM1 ccim1) {
		CCIM1Dto ccim1Dto = modelMapper.map(ccim1, CCIM1Dto.class);
		return ccim1Dto;
	}
}
